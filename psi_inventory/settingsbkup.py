"""
Django settings for psi_inventory project.

Generated by 'django-admin startproject' using Django 3.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
import ldap
from django.contrib import messages
from django_auth_ldap.config import LDAPGroupQuery, GroupOfNamesType, LDAPSearchUnion, LDAPSearch

BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-$%@@elg%)=%i4n3bzdxnpkm(9(4oa$m1=y$torz-au(n#a(&jj'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# ALLOWED_HOSTS = ["192.168.0.104","127.0.0.1",
#                  "10.129.128.89","41.190.132.149","192.168.0.110",]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'assets',
    'home',
    'base',
    'searchapi',
    'django_filters',
    'qrcodegen',

    'rest_framework',
    'api',
    'django.contrib.humanize',

    'corsheaders',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

AUTH_LDAP_SERVER_URI = "ldap://192.168.0.10"
#AUTH_LDAP_SERVER_URI = "ldap://10.129.128.14"

AUTH_LDAP_BIND_DN = "cn=Administrator,cn=Users,dc=nymbow,dc=co,dc=ug"
#AUTH_LDAP_BIND_DN = "cn=Administrator,cn=Users,dc=psiug,dc=org"

AUTH_LDAP_BIND_PASSWORD = "DontWakemeup10"
#AUTH_LDAP_BIND_PASSWORD = "s$rm0N@123#!"

#AUTH_LDAP_USER_SEARCH = LDAPSearch("ou=Users,dc=nymbow,dc=co,dc=ug", ldap.SCOPE_SUBTREE, "(samAccountName=%(user)s)")


AUTH_LDAP_USER_SEARCH = LDAPSearchUnion(
    LDAPSearch("ou=users,dc=nymbow,dc=co,dc=ug", ldap.SCOPE_SUBTREE, "(samaccountName=%(user)s)"),
    LDAPSearch("ou=Staff_OU,dc=nymbow,dc=co,dc=ug", ldap.SCOPE_SUBTREE, "(samaccountName=%(user)s)"),
    LDAPSearch("ou=IT_OU,dc=nymbow,dc=co,dc=ug", ldap.SCOPE_SUBTREE, "(samaccountName=%(user)s)"),
    LDAPSearch("ou=Finance_OU,dc=nymbow,dc=co,dc=ug", ldap.SCOPE_SUBTREE, "(samaccountName=%(user)s)"),
    # LDAPSearch("cn=Finance,dc=nymbow,dc=co,dc=ug", ldap.SCOPE_SUBTREE, "(samaccountName=%(user)s)"),
    # LDAPSearch("cn=IT,dc=nymbow,dc=co,dc=ug", ldap.SCOPE_SUBTREE, "(samaccountName=%(user)s)"),
    # LDAPSearch("cn=Staff_OU,dc=nymbow,dc=co,dc=ug", ldap.SCOPE_SUBTREE, "(samaccountName=%(user)s)"),
)


# AUTH_LDAP_USER_SEARCH = LDAPSearchUnion(
#     LDAPSearch("ou=Users,dc=psiug,dc=ug", ldap.SCOPE_SUBTREE, "(samaccountName=%(user)s)"),
#     LDAPSearch("ou=IT,dc=psiug,dc=org", ldap.SCOPE_SUBTREE, "(samaccountName=%(user)s)"),
#     LDAPSearch("ou=Finance,dc=psiug,dc=org", ldap.SCOPE_SUBTREE, "(samaccountName=%(user)s)"),
# #     #LDAPSearch("ou=Finance_OU,dc=nymbow,dc=co,dc=ug", ldap.SCOPE_SUBTREE, "(samaccountName=%(user)s)"),
# #     # LDAPSearch("cn=Finance,dc=nymbow,dc=co,dc=ug", ldap.SCOPE_SUBTREE, "(samaccountName=%(user)s)"),
# #     # LDAPSearch("cn=IT,dc=nymbow,dc=co,dc=ug", ldap.SCOPE_SUBTREE, "(samaccountName=%(user)s)"),
# #     # LDAPSearch("cn=Staff_OU,dc=nymbow,dc=co,dc=ug", ldap.SCOPE_SUBTREE, "(samaccountName=%(user)s)"),
#     )


AUTH_LDAP_USER_ATTR_MAP = {
    "username":"sAMAccountName",
    "first_name": "givenName",
    "last_name": "sn",
    "email":"mail",
    # "role":"title",
    # "supervisor":"Manager",
    # "department":"department",
}


AUTH_LDAP_GROUP_SEARCH = LDAPSearchUnion(
    "ou=IT_OU,dc=nymbow,dc=co,dc=ug", ldap.SCOPE_SUBTREE, "(objectClass=groupOfNames)"
    "ou=Staff_OU,dc=nymbow,dc=co,dc=ug", ldap.SCOPE_SUBTREE, "(objectClass=groupOfNames)"
    "ou=Finance_OU,dc=nymbow,dc=co,dc=ug", ldap.SCOPE_SUBTREE, "(objectClass=groupOfNames)"
)

# AUTH_LDAP_GROUP_SEARCH = LDAPSearchUnion(
#     "ou=IT,dc=psiug,dc=org", ldap.SCOPE_SUBTREE, "(objectClass=groupOfNames)"
#     "ou=SCM,dc=psiug,dc=org", ldap.SCOPE_SUBTREE, "(objectClass=groupOfNames)"
#     "ou=Finance,dc=psiug,dc=org", ldap.SCOPE_SUBTREE, "(objectClass=groupOfNames)"
# )

AUTH_LDAP_GROUP_TYPE = GroupOfNamesType(name_attr="cn")

AUTH_LDAP_USER_FLAGS_BY_GROUP = {

    "is_staff": "cn=Finance,ou=Finance_OU,dc=nymbow,dc=co,dc=ug",
    "is_active": (LDAPGroupQuery("cn=staff,ou=staff_ou,dc=nymbow,dc=co,dc=ug")
                  | LDAPGroupQuery("cn=it,ou=it_ou,dc=nymbow,dc=co,dc=ug")
                  | LDAPGroupQuery("cn=finance,ou=finance_ou,dc=nymbow,dc=co,dc=ug")),

    "is_superuser": "cn=it,ou=it_ou,dc=nymbow,dc=co,dc=ug",
}

# This is the default, but I like to be explicit.
AUTH_LDAP_ALWAYS_UPDATE_USER = True

# Use LDAP group membership to calculate group permissions.
#AUTH_LDAP_FIND_GROUP_PERMS = True

# Cache distinguished names and group memberships for an hour to minimize
# LDAP traffic.
AUTH_LDAP_CACHE_TIMEOUT = 3600


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.SessionAuthentication',
    ),
}

AUTHENTICATION_BACKENDS = (
    "django_auth_ldap.backend.LDAPBackend",
    "django.contrib.auth.backends.ModelBackend",
)


ROOT_URLCONF = 'psi_inventory.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'psi_inventory.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'inventory',
        'USER': 'fssemanda',
        'PASSWORD': 'DontWakemeup10',
        'HOST': '192.168.0.3',
        'PORT': '3306',
    }
}


# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'inventory',
#         'USER': 'francis',
#         'PASSWORD': 'DontWakemeup10',
#         'HOST': '10.129.129.21',
#         'PORT': '3306',
#     }
# }


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

DATE_FORMAT = '%m/%d/%Y'
#
DATE_INPUT_FORMATS = '%m/%d/%Y'

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATICFILES_DIRS = [
    os.path.join(BASE_DIR,'static')
]
STATIC_URL = 'static/'



MEDIA_ROOT = os.path.join(BASE_DIR, 'static/img')

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MEDIA_URL = '/img/'

CORS_ALLOW_ALL_ORIGINS = True

MESSAGE_TAGS = {
    messages.ERROR :'danger'
}

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "handlers": {"console": {"class": "logging.StreamHandler"}},
    "loggers": {"django_auth_ldap": {"level": "DEBUG", "handlers": ["console"]}},
}